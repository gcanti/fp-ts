// @flow
import type { HKT } from './HKT'
import type { Functor } from './Functor'

export interface Profunctor<F> extends Functor<F> {
  promap<A, B, C, D, U>(f: (a: A) => B, g: (c: C) => D, fbc: HKT<F, U, B, C>): HKT<F, U, A, D>;
}

declare export var lmap: <F>(
  profunctor: Profunctor<F>
) => <A, B>(f: (a: A) => B) => <C, U>(fbc: HKT<F, U, B, C>) => HKT<F, U, A, C>

declare export var rmap: <F>(
  profunctor: Profunctor<F>
) => <C, D>(g: (c: C) => D) => <B, U>(fbc: HKT<F, U, B, C>) => HKT<F, U, B, D>
