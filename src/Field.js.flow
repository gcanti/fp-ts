// @flow
import type { Ring } from './Ring'
import type { Setoid } from './Setoid'

export interface Field<A> extends Ring<A> {
  degree(a: A): number;
  div(x: A): (y: A) => A;
  mod(x: A): (y: A) => A;
}

declare export var fieldNumber: Field<number>

declare export var gcd: <A>(S: Setoid<A>, field: Field<A>) => (x: A) => (y: A) => A

declare export var lcm: <A>(setoid: Setoid<A>, field: Field<A>) => (x: A) => (y: A) => A
